<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:security="http://www.springframework.org/schema/security"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
        
	<security:http>
		<security:intercept-url pattern="/css/**" access="permitAll"/>
		<security:intercept-url pattern="/images/**" access="permitAll"/>
		<security:intercept-url pattern="/js/**" access="permitAll"/>
		<security:intercept-url pattern="/login**" access="permitAll"/>
		<security:intercept-url pattern="/logBackIn**" access="permitAll"/>
		<security:intercept-url pattern="/loginEA" access="permitAll"/>
		<security:intercept-url pattern="/logoutEA" access="permitAll"/>
		<security:intercept-url pattern="/visitFailedUnAuth" access="permitAll"/>
		<security:intercept-url pattern="/createUser/**" access="permitAll"/>
		<security:intercept-url pattern="/getDistrictPicture/**" access="permitAll" />
		<security:intercept-url pattern="/isUserExisted/**" access="permitAll" />
		<security:intercept-url pattern="/resetPassword/**" access="permitAll"/>
		<security:intercept-url pattern="/changeLanguage" access="permitAll"/>
		<security:intercept-url pattern="/getLicenseContent" access="permitAll"/>
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<security:access-denied-handler ref="accessDeniedHandler"/>
		<security:form-login login-page="/login"
							 authentication-success-handler-ref="customSuccessHandler"
							 authentication-success-forward-url="/home"
							 login-processing-url="/loginEA"
							 authentication-failure-handler-ref="customFailureHandler"
                			 username-parameter="username"
                			 password-parameter="password"/>
        <security:logout logout-url="/logoutEA" success-handler-ref="customSuccessLogoutHandler" invalidate-session="true" />
        <security:custom-filter before="CHANNEL_FILTER" ref="databaseFilter"/>
        <security:csrf request-matcher-ref="csrfSecurityRequestMatcher" />
        <security:headers> 
	      <security:frame-options policy="SAMEORIGIN"/> 
	    </security:headers>
	</security:http>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:password-encoder ref="customSHA256Encoder"/>    
			<!-- // ALC-26 Lock account on the 5th login failed -->
        	<security:jdbc-user-service data-source-ref="dataSource" 
        							users-by-username-query="select usrname as 'username', usrpswd as 'password', 
        							 CASE  when USR_TIMEOUT_DT is null then 'true'
             							  when USR_TIMEOUT_DT &lt; dateadd(minute,-(select PREF_VALUE from  TXEIS_PREFERENCES where PREF_NAME = 'lock_timeout'),getdate()) then 'true'
          								  ELSE 'false' END
										 AS enabled
										  from BEA_USERS where usrname= UPPER ( ? )"
        							authorities-by-username-query="select usrname as 'username', 'ROLE_USER' as authority from BEA_USERS where usrname=?"/>
		
		</security:authentication-provider>
	</security:authentication-manager>
    
    <bean id="databaseFilter" class="com.esc20.filter.DatabaseNameFilter" />
 	
 	<bean id="customSHA256Encoder" class="com.esc20.security.CustomSHA256Encoder" />
 
 	<bean id="customSuccessHandler" class="com.esc20.security.CustomSuccessHandler" />
 	
 	<bean id="customSuccessLogoutHandler" class="com.esc20.security.CustomSuccessLogoutHandler" />
 	
 	<bean id="accessDeniedHandler" class="com.esc20.security.CustomAccessDeniedHandler" />
 	
 	<bean id="customFailureHandler" class="com.esc20.security.CustomFailureHandler" />
 	
 	<bean id="csrfSecurityRequestMatcher" class="com.esc20.security.CustomCsrfSecurityRequestMatcher" />

</beans>